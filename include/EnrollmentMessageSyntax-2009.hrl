%% Generated by the Erlang ASN.1 compiler. Version: 5.1
%% Purpose: Erlang record definitions for each named and unnamed
%% SEQUENCE and SET, and macro definitions for each value
%% definition in module EnrollmentMessageSyntax-2009.

-ifndef(_ENROLLMENTMESSAGESYNTAX_2009_HRL_).
-define(_ENROLLMENTMESSAGESYNTAX_2009_HRL_, true).

-record('PKIData', {
  controlSequence,
  reqSequence,
  cmsSequence,
  otherMsgSequence
}).

-record('TaggedAttribute', {
  bodyPartID,
  attrType,
  attrValues
}).

-record('TaggedRequest_orm', {
  bodyPartID,
  requestMessageType,
  requestMessageValue
}).

-record('TaggedCertificationRequest', {
  bodyPartID,
  certificationRequest
}).

-record('CertificationRequest', {
  certificationRequestInfo,
  signatureAlgorithm,
  signature
}).

-record('CertificationRequest_certificationRequestInfo', {
  version,
  subject,
  subjectPublicKeyInfo,
  attributes
}).

-record('CertificationRequest_certificationRequestInfo_subjectPublicKeyInfo', {
  algorithm,
  subjectPublicKey
}).

-record('CertificationRequest_certificationRequestInfo_subjectPublicKeyInfo_algorithm', {
  algorithm,
  parameters = asn1_NOVALUE
}).

-record('CertificationRequest_certificationRequestInfo_attributes_SETOF', {
  type,
  values
}).

-record('CertificationRequest_signatureAlgorithm', {
  algorithm,
  parameters = asn1_NOVALUE
}).

-record('TaggedContentInfo', {
  bodyPartID,
  contentInfo
}).

-record('OtherMsg', {
  bodyPartID,
  otherMsgType,
  otherMsgValue
}).

-record('PKIResponse', {
  controlSequence,
  cmsSequence,
  otherMsgSequence
}).

-record('CMCStatusInfo', {
  cMCStatus,
  bodyList,
  statusString = asn1_NOVALUE,
  otherInfo = asn1_NOVALUE
}).

-record('PendInfo', {
  pendToken,
  pendTime
}).

-record('AddExtensions', {
  pkiDataReference,
  certReferences,
  extensions
}).

-record('AddExtensions_extensions_SEQOF', {
  extnID,
  critical = asn1_DEFAULT,
  extnValue
}).

-record('EncryptedPOP', {
  request,
  cms,
  thePOPAlgID,
  witnessAlgID,
  witness
}).

-record('EncryptedPOP_thePOPAlgID', {
  algorithm,
  parameters = asn1_NOVALUE
}).

-record('EncryptedPOP_witnessAlgID', {
  algorithm,
  parameters = asn1_NOVALUE
}).

-record('DecryptedPOP', {
  bodyPartID,
  thePOPAlgID,
  thePOP
}).

-record('DecryptedPOP_thePOPAlgID', {
  algorithm,
  parameters = asn1_NOVALUE
}).

-record('LraPopWitness', {
  pkiDataBodyid,
  bodyIds
}).

-record('GetCert', {
  issuerName,
  serialNumber
}).

-record('GetCRL', {
  issuerName,
  cRLName = asn1_NOVALUE,
  time = asn1_NOVALUE,
  reasons = asn1_NOVALUE
}).

-record('RevokeRequest', {
  issuerName,
  serialNumber,
  reason,
  invalidityDate = asn1_NOVALUE,
  passphrase = asn1_NOVALUE,
  comment = asn1_NOVALUE
}).

-record('ExtensionReq_SEQOF', {
  extnID,
  critical = asn1_DEFAULT,
  extnValue
}).

-record('CMCUnsignedData', {
  bodyPartPath,
  identifier,
  content
}).

-record('CMCStatusInfoV2', {
  cMCStatus,
  bodyList,
  statusString = asn1_NOVALUE,
  otherInfo = asn1_NOVALUE
}).

-record('CMCStatusInfoV2_otherInfo_extendedFailInfo', {
  failInfoOID,
  failInfoValue
}).

-record('PublishTrustAnchors', {
  seqNumber,
  hashAlgorithm,
  anchorHashes
}).

-record('PublishTrustAnchors_hashAlgorithm', {
  algorithm,
  parameters = asn1_NOVALUE
}).

-record('CMCPublicationInfo', {
  hashAlg,
  certHashes,
  pubInfo
}).

-record('CMCPublicationInfo_hashAlg', {
  algorithm,
  parameters = asn1_NOVALUE
}).

-record('ModCertTemplate', {
  pkiDataReference,
  certReferences,
  replace = asn1_DEFAULT,
  certTemplate
}).

-record('ControlsProcessed', {
  bodyList
}).

-record('IdentityProofV2', {
  proofAlgID,
  macAlgId,
  witness
}).

-record('IdentityProofV2_proofAlgID', {
  algorithm,
  parameters = asn1_NOVALUE
}).

-record('IdentityProofV2_macAlgId', {
  algorithm,
  parameters = asn1_NOVALUE
}).

-record('PopLinkWitnessV2', {
  keyGenAlgorithm,
  macAlgorithm,
  witness
}).

-record('PopLinkWitnessV2_keyGenAlgorithm', {
  algorithm,
  parameters = asn1_NOVALUE
}).

-record('PopLinkWitnessV2_macAlgorithm', {
  algorithm,
  parameters = asn1_NOVALUE
}).

-define('id-cmc', {1,3,6,1,5,5,7,7}).
-define('id-cct', {1,3,6,1,5,5,7,12}).
-define('id-cct-PKIData', {1,3,6,1,5,5,7,12,2}).
-define('id-cct-PKIResponse', {1,3,6,1,5,5,7,12,3}).
-define('id-cmc-identityProof', {1,3,6,1,5,5,7,7,3}).
-define('id-cmc-dataReturn', {1,3,6,1,5,5,7,7,4}).
-define('id-cmc-regInfo', {1,3,6,1,5,5,7,7,18}).
-define('id-cmc-responseInfo', {1,3,6,1,5,5,7,7,19}).
-define('id-cmc-queryPending', {1,3,6,1,5,5,7,7,21}).
-define('id-cmc-popLinkRandom', {1,3,6,1,5,5,7,7,22}).
-define('id-cmc-popLinkWitness', {1,3,6,1,5,5,7,7,23}).
-define('id-cmc-identification', {1,3,6,1,5,5,7,7,2}).
-define('id-cmc-transactionId', {1,3,6,1,5,5,7,7,5}).
-define('id-cmc-senderNonce', {1,3,6,1,5,5,7,7,6}).
-define('id-cmc-recipientNonce', {1,3,6,1,5,5,7,7,7}).
-define('id-cmc-statusInfo', {1,3,6,1,5,5,7,7,1}).
-define('id-cmc-addExtensions', {1,3,6,1,5,5,7,7,8}).
-define('id-cmc-encryptedPOP', {1,3,6,1,5,5,7,7,9}).
-define('id-cmc-decryptedPOP', {1,3,6,1,5,5,7,7,10}).
-define('id-cmc-lraPOPWitness', {1,3,6,1,5,5,7,7,11}).
-define('id-cmc-getCert', {1,3,6,1,5,5,7,7,15}).
-define('id-cmc-getCRL', {1,3,6,1,5,5,7,7,16}).
-define('id-cmc-revokeRequest', {1,3,6,1,5,5,7,7,17}).
-define('id-cmc-confirmCertAcceptance', {1,3,6,1,5,5,7,7,24}).
-define('id-ExtensionReq', {1,2,840,113549,1,9,14}).
-define('id-alg-noSignature', {1,3,6,1,5,5,7,6,2}).
-define('id-aa', {1,2,840,113549,1,9,16,2}).
-define('id-aa-cmc-unsignedData', {1,2,840,113549,1,9,16,2,34}).
-define('id-cmc-statusInfoV2', {1,3,6,1,5,5,7,7,25}).
-define('id-cmc-trustedAnchors', {1,3,6,1,5,5,7,7,26}).
-define('id-cmc-authData', {1,3,6,1,5,5,7,7,27}).
-define('id-cmc-batchRequests', {1,3,6,1,5,5,7,7,28}).
-define('id-cmc-batchResponses', {1,3,6,1,5,5,7,7,29}).
-define('id-cmc-publishCert', {1,3,6,1,5,5,7,7,30}).
-define('id-cmc-modCertTemplate', {1,3,6,1,5,5,7,7,31}).
-define('id-cmc-controlProcessed', {1,3,6,1,5,5,7,7,32}).
-define('id-cmc-identityProofV2', {1,3,6,1,5,5,7,7,33}).
-define('id-cmc-popLinkWitnessV2', {1,3,6,1,5,5,7,7,34}).
-endif. %% _ENROLLMENTMESSAGESYNTAX_2009_HRL_
