%% Generated by the Erlang ASN.1 compiler. Version: 5.0.9
%% Purpose: Erlang record definitions for each named and unnamed
%% SEQUENCE and SET, and macro definitions for each value
%% definition in module AuthenticationFramework.

-ifndef(_AUTHENTICATIONFRAMEWORK_HRL_).
-define(_AUTHENTICATIONFRAMEWORK_HRL_, true).

-record('HASH', {
  algorithmIdentifier,
  hashValue
}).

-record('SIGNATURE', {
  algorithmIdentifier,
  encrypted
}).

-record('SIGNED', {
  toBeSigned,
  algorithmIdentifier,
  encrypted
}).

-record('Certificate', {
  toBeSigned,
  algorithmIdentifier,
  encrypted
}).

-record('Certificate_toBeSigned', {
  version = asn1_DEFAULT,
  serialNumber,
  signature,
  issuer,
  validity,
  subject,
  subjectPublicKeyInfo,
  issuerUniqueIdentifier = asn1_NOVALUE,
  subjectUniqueIdentifier = asn1_NOVALUE,
  extensions = asn1_NOVALUE
}).

-record('AlgorithmIdentifier', {
  algorithm,
  parameters = asn1_NOVALUE
}).

-record('Validity', {
  notBefore,
  notAfter
}).

-record('SubjectPublicKeyInfo', {
  algorithm,
  subjectPublicKey
}).

-record('Extension', {
  extnId,
  critical = asn1_DEFAULT,
  extnValue
}).

-record('Certificates', {
  userCertificate,
  certificationPath = asn1_NOVALUE
}).

-record('CertificationPath', {
  userCertificate,
  theCACertificates = asn1_NOVALUE
}).

-record('CertificatePair', {
  issuedByThisCA = asn1_NOVALUE,
  issuedToThisCA = asn1_NOVALUE
}).

-record('CertificateList', {
  toBeSigned,
  algorithmIdentifier,
  encrypted
}).

-record('CertificateList_toBeSigned', {
  version = asn1_NOVALUE,
  signature,
  issuer,
  thisUpdate,
  nextUpdate = asn1_NOVALUE,
  revokedCertificates = asn1_NOVALUE,
  crlExtensions = asn1_NOVALUE
}).

-record('CertificateList_toBeSigned_revokedCertificates_SEQOF', {
  userCertificate,
  revocationDate,
  crlEntryExtensions = asn1_NOVALUE
}).

-record('AttributeCertificationPath', {
  attributeCertificate,
  acPath = asn1_NOVALUE
}).

-record('ACPathData', {
  certificate = asn1_NOVALUE,
  attributeCertificate = asn1_NOVALUE
}).

-record('AttributeCertificate', {
  toBeSigned,
  algorithmIdentifier,
  encrypted
}).

-record('AttributeCertificateInfo', {
  version = asn1_DEFAULT,
  subject,
  issuer,
  signature,
  serialNumber,
  attCertValidityPeriod,
  attributes,
  issuerUniqueID = asn1_NOVALUE,
  extensions = asn1_NOVALUE
}).

-record('IssuerSerial', {
  issuer,
  serial,
  issuerUID = asn1_NOVALUE
}).

-record('AttCertValidityPeriod', {
  notBeforeTime,
  notAfterTime
}).

-record('AttributeCertificateAssertion', {
  subject = asn1_NOVALUE,
  issuer = asn1_NOVALUE,
  attCertValidity = asn1_NOVALUE,
  attType = asn1_NOVALUE
}).

-define('id-at-userPassword', {2,5,4,35}).
-define('id-at-userCertificate', {2,5,4,36}).
-define('id-at-cAcertificate', {2,5,4,37}).
-define('id-at-authorityRevocationList', {2,5,4,38}).
-define('id-at-certificateRevocationList', {2,5,4,39}).
-define('id-at-crossCertificatePair', {2,5,4,40}).
-define('id-at-attributeCertificate', {2,5,4,58}).
-define('id-at-attributeCertificateRevocationList', {2,5,4,59}).
-define('id-mr-attributeCertificateMatch', {2,5,13,42}).
-endif. %% _AUTHENTICATIONFRAMEWORK_HRL_
